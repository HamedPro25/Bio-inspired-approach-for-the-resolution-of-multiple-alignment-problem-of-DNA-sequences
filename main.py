# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'App_ui.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
import res
import random
from solution import Solution
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QSizePolicy
from PyQt5.QtCore import QSize
import test
import res
import RC
from pyqtgraph import PlotWidget, plot
import pyqtgraph as pg
import pickle

class Ui_MainWindow(object):
        def setupUi(self, MainWindow):
                MainWindow.setObjectName("MainWindow")
                MainWindow.resize(1000, 600)
                MainWindow.setFixedSize(1000,600)
                self.centralwidget = QtWidgets.QWidget(MainWindow)
                self.centralwidget.setObjectName("centralwidget")
                self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.centralwidget)
                self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
                self.verticalLayout_4.setSpacing(0)
                self.verticalLayout_4.setObjectName("verticalLayout_4")
                self.widget = QtWidgets.QWidget(self.centralwidget)
                self.widget.setEnabled(True)
                self.widget.setMinimumSize(QtCore.QSize(1000, 0))
                self.widget.setMaximumSize(QtCore.QSize(800, 600))
                self.widget.setStyleSheet("QWidget{\n"
        "background-color: #1F2029;\n"
        "}")
                self.widget.setObjectName("widget")
                self.pushButton_3 = QtWidgets.QPushButton(self.widget)
                self.pushButton_3.setGeometry(QtCore.QRect(300, 20, 80, 23))
                font = QtGui.QFont()
                font.setFamily("Open Sans")
                font.setPointSize(10)
                self.pushButton_3.setFont(font)
                self.pushButton_3.setStyleSheet("QPushButton{\n"
        "color:white;\n"
        "}")
                icon = QtGui.QIcon()
                icon.addPixmap(QtGui.QPixmap(":/20x20/icons/20x20/ref.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                self.pushButton_3.setIcon(icon)
                self.pushButton_3.setObjectName("pushButton_3")
                self.layoutWidget = QtWidgets.QWidget(self.widget)
                self.layoutWidget.setGeometry(QtCore.QRect(401, 20, 600, 571))
                self.layoutWidget.setObjectName("layoutWidget")
                self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.layoutWidget)
                self.verticalLayout_2.setSizeConstraint(QtWidgets.QLayout.SetMaximumSize)
                self.verticalLayout_2.setContentsMargins(0, 0, 10, 0)
                self.verticalLayout_2.setObjectName("verticalLayout_2")
                self.label = QtWidgets.QLabel(self.layoutWidget)
                self.label.setEnabled(False)
                self.label.setMinimumSize(QtCore.QSize(600, 0))
                font = QtGui.QFont()
                font.setFamily("Open Sans Semibold")
                font.setPointSize(25)
                self.label.setFont(font)
                self.label.setStyleSheet("QLabel{\n"
        "color:white;\n"
        "}")
                self.label.setObjectName("label")
                self.verticalLayout_2.addWidget(self.label)
                self.tabWidget = QtWidgets.QTabWidget(self.widget)
                self.tabWidget.setEnabled(True)
                self.tabWidget.lower()
                self.tabWidget.setGeometry(QtCore.QRect(0, 20, 370, 500))
                self.tabWidget.setMinimumSize(QtCore.QSize(370, 500))
                self.tabWidget.setMaximumSize(QtCore.QSize(380, 500))
                self.tabWidget.setStyleSheet("QTabBar::tab:selected {\n"
        "color:#F26A4E;\n"
        "                border-top:3px solid #F26A4E;\n"
        "              margin-bottom: -3px\n"
        "}\n"
        "QTabBar::tab {\n"
        "        width:100px;\n"
        "         color:white;\n"
        "         font-size:18px;\n"
        "         height:20px;\n"
        "         border: 1px solid white;\n"
        "       padding: 3px;\n"
        "  }\n"
        " QTabWidget::pane {\n"
        "    border: 1px solid lightgray;\n"
        "   top:-1px;\n"
        "  background: rgb(245, 245, 245);\n"
        "}")
                self.tabWidget.setIconSize(QtCore.QSize(20, 20))
                self.tabWidget.setObjectName("tabWidget")
                self.tab = QtWidgets.QWidget()
                self.tab.setMinimumSize(QtCore.QSize(400, 570))
                self.tab.setMaximumSize(QtCore.QSize(400, 570))
                self.tab.setStyleSheet("QWidget{\n"
        "border:none;\n"
        "}\n"
        "\n"
        "")
                self.tab.setObjectName("tab")
                self.label_2 = QtWidgets.QLabel(self.tab)
                self.label_2.setGeometry(QtCore.QRect(10, 10, 341, 41))
                font = QtGui.QFont()
                font.setFamily("Open Sans Semibold")
                font.setPointSize(-1)
                self.label_2.setFont(font)
                self.label_2.setStyleSheet("QLabel{\n"
        "color:white;\n"
        "font-size:30px;\n"
        "}")
                self.label_2.setAlignment(QtCore.Qt.AlignCenter)
                self.label_2.setObjectName("label_2")
                self.label_23 = QtWidgets.QLabel(self.tab)
                self.label_23.setGeometry(QtCore.QRect(60, 90, 241, 21))
                font = QtGui.QFont()
                font.setFamily("Open Sans Light")
                font.setPointSize(-1)
                self.label_23.setFont(font)
                self.label_23.setStyleSheet("QLabel{\n"
        "font-size:20px;\n"
        "color:#D2D5DA;\n"
        "}")
                self.label_23.setObjectName("label_23")
                self.widget_39 = QtWidgets.QWidget(self.tab)
                self.widget_39.setGeometry(QtCore.QRect(30, 130, 280, 40))
                self.widget_39.setStyleSheet("QWidget{\n"
        "\n"
        "border: 1px solid #F3F6FB ;\n"
        "}")
                self.widget_39.setObjectName("widget_39")
                self.label_45 = QtWidgets.QLabel(self.widget_39)
                self.label_45.setGeometry(QtCore.QRect(10, 10, 30, 20))
                self.label_45.setMinimumSize(QtCore.QSize(30, 0))
                self.label_45.setMaximumSize(QtCore.QSize(30, 16777215))
                self.label_45.setStyleSheet("QLabel{\n"
        "background-image:url(:/20x20/icons/20x20/4092560-20.png);\n"
        "background-repeat: no-repeat;\n"
        "border:none;\n"
        "}")
                self.label_45.setText("")
                self.label_45.setObjectName("label_45")
                self.widget_40 = QtWidgets.QWidget(self.widget_39)
                self.widget_40.setGeometry(QtCore.QRect(50, 40, 281, 41))
                self.widget_40.setStyleSheet("QWidget{\n"
        "\n"
        "border: 1px solid #F3F6FB ;\n"
        "}")
                self.widget_40.setObjectName("widget_40")
                self.textEdit_32 = QtWidgets.QTextEdit(self.widget_40)
                self.textEdit_32.setGeometry(QtCore.QRect(70, 0, 120, 30))
                self.textEdit_32.setMaximumSize(QtCore.QSize(120, 30))
                self.textEdit_32.setStyleSheet("QtextEdit{\n"
        "background-color: #293746;\n"
        "color:white;\n"
        "border:none;\n"
        "}")
                self.textEdit_32.setObjectName("textEdit_32")
                self.label_46 = QtWidgets.QLabel(self.widget_40)
                self.label_46.setGeometry(QtCore.QRect(10, 10, 30, 21))
                self.label_46.setMinimumSize(QtCore.QSize(30, 0))
                self.label_46.setMaximumSize(QtCore.QSize(30, 16777215))
                self.label_46.setStyleSheet("QLabel{\n"
        "background-image:url(:/20x20/icons/20x20/6578854-20.png);\n"
        "background-repeat: no-repeat;\n"
        "border:none;\n"
        "}")
                self.label_46.setText("")
                self.label_46.setObjectName("label_46")
                self.plainTextEdit_9 = QtWidgets.QPlainTextEdit(self.widget_39)
                self.plainTextEdit_9.setGeometry(QtCore.QRect(40, 6, 231, 31))
                self.plainTextEdit_9.setStyleSheet("border:0;\n"
        "color:white;")
                self.plainTextEdit_9.setObjectName("plainTextEdit_9")
                self.widget_41 = QtWidgets.QWidget(self.tab)
                self.widget_41.setGeometry(QtCore.QRect(30, 210, 280, 40))
                self.widget_41.setStyleSheet("QWidget{\n"
        "\n"
        "border: 1px solid #F3F6FB ;\n"
        "}")
                self.widget_41.setObjectName("widget_41")
                self.label_47 = QtWidgets.QLabel(self.widget_41)
                self.label_47.setGeometry(QtCore.QRect(10, 10, 30, 20))
                self.label_47.setMinimumSize(QtCore.QSize(30, 0))
                self.label_47.setMaximumSize(QtCore.QSize(30, 16777215))
                self.label_47.setStyleSheet("QLabel{\n"
        "background-image:url(:/20x20/icons/20x20/216090-20.png);\n"
        "background-repeat: no-repeat;\n"
        "border:none;\n"
        "}")
                self.label_47.setText("")
                self.label_47.setObjectName("label_47")
                self.widget_42 = QtWidgets.QWidget(self.widget_41)
                self.widget_42.setGeometry(QtCore.QRect(50, 40, 281, 41))
                self.widget_42.setStyleSheet("QWidget{\n"
        "\n"
        "border: 1px solid #F3F6FB ;\n"
        "}")
                self.widget_42.setObjectName("widget_42")
                self.textEdit_33 = QtWidgets.QTextEdit(self.widget_42)
                self.textEdit_33.setGeometry(QtCore.QRect(70, 0, 120, 30))
                self.textEdit_33.setMaximumSize(QtCore.QSize(120, 30))
                self.textEdit_33.setStyleSheet("QtextEdit{\n"
        "background-color: #293746;\n"
        "color:white;\n"
        "border:none;\n"
        "}")
                self.textEdit_33.setObjectName("textEdit_33")
                self.label_48 = QtWidgets.QLabel(self.widget_42)
                self.label_48.setGeometry(QtCore.QRect(10, 10, 30, 21))
                self.label_48.setMinimumSize(QtCore.QSize(30, 0))
                self.label_48.setMaximumSize(QtCore.QSize(30, 16777215))
                self.label_48.setStyleSheet("QLabel{\n"
        "background-image:url(:/20x20/icons/20x20/6578854-20.png);\n"
        "background-repeat: no-repeat;\n"
        "border:none;\n"
        "}")
                self.label_48.setText("")
                self.label_48.setObjectName("label_48")
                self.plainTextEdit_10 = QtWidgets.QPlainTextEdit(self.widget_41)
                self.plainTextEdit_10.setGeometry(QtCore.QRect(40, 6, 231, 31))
                self.plainTextEdit_10.setStyleSheet("border:0;\n"
        "color:white;")
                self.plainTextEdit_10.setObjectName("plainTextEdit_10")
                self.horizontalSlider = QtWidgets.QSlider(self.tab)
                self.horizontalSlider.setGeometry(QtCore.QRect(80, 310, 160, 22))
                self.horizontalSlider.setMaximum(100)
                self.horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
                self.horizontalSlider.setObjectName("horizontalSlider")
                self.horizontalSlider_2 = QtWidgets.QSlider(self.tab)
                self.horizontalSlider_2.setGeometry(QtCore.QRect(80, 380, 160, 22))
                self.horizontalSlider_2.setOrientation(QtCore.Qt.Horizontal)
                self.horizontalSlider_2.setObjectName("horizontalSlider_2")
                self.label_4 = QtWidgets.QLabel(self.tab)
                self.label_4.setGeometry(QtCore.QRect(280, 310, 47, 13))
                font = QtGui.QFont()
                font.setFamily("Open Sans ExtraBold")
                font.setPointSize(10)
                self.label_4.setFont(font)
                self.label_4.setStyleSheet("color:white")
                self.label_4.setObjectName("label_4")
                self.label_5 = QtWidgets.QLabel(self.tab)
                self.label_5.setGeometry(QtCore.QRect(30, 270, 151, 16))
                font = QtGui.QFont()
                font.setFamily("Open Sans")
                font.setPointSize(12)
                self.label_5.setFont(font)
                self.label_5.setStyleSheet("color:white;")
                self.label_5.setObjectName("label_5")
                self.label_6 = QtWidgets.QLabel(self.tab)
                self.label_6.setGeometry(QtCore.QRect(30, 350, 151, 16))
                font = QtGui.QFont()
                font.setFamily("Open Sans")
                font.setPointSize(12)
                self.label_6.setFont(font)
                self.label_6.setStyleSheet("color:white")
                self.label_6.setObjectName("label_6")
                self.label_7 = QtWidgets.QLabel(self.tab)
                self.label_7.setGeometry(QtCore.QRect(280, 380, 47, 13))
                font = QtGui.QFont()
                font.setFamily("Open Sans ExtraBold")
                font.setPointSize(10)
                self.label_7.setFont(font)
                self.label_7.setStyleSheet("color:white;")
                self.label_7.setObjectName("label_7")
                self.tabWidget.addTab(self.tab, "")
                self.tab_2 = QtWidgets.QWidget()
                self.tab_2.setStyleSheet("QWidget{\n"
        "border:none;\n"
        "}")
                self.tab_2.setObjectName("tab_2")
                self.label_24 = QtWidgets.QLabel(self.tab_2)
                self.label_24.setGeometry(QtCore.QRect(70, 100, 241, 21))
                font = QtGui.QFont()
                font.setFamily("Open Sans Light")
                font.setPointSize(-1)
                self.label_24.setFont(font)
                self.label_24.setStyleSheet("QLabel{\n"
        "font-size:20px;\n"
        "color:#D2D5DA;\n"
        "}")
                self.label_24.setObjectName("label_24")
                self.label_33 = QtWidgets.QLabel(self.tab_2)
                self.label_33.setGeometry(QtCore.QRect(10, 20, 351, 71))
                font = QtGui.QFont()
                font.setFamily("Open Sans Semibold")
                font.setPointSize(-1)
                self.label_33.setFont(font)
                self.label_33.setStyleSheet("QLabel{\n"
        "color:white;\n"
        "font-size:30px;\n"
        "}")
                self.label_33.setAlignment(QtCore.Qt.AlignCenter)
                self.label_33.setWordWrap(True)
                self.label_33.setObjectName("label_33")
                self.label_12 = QtWidgets.QLabel(self.tab_2)
                self.label_12.setGeometry(QtCore.QRect(300, 210, 47, 13))
                font = QtGui.QFont()
                font.setFamily("Open Sans ExtraBold")
                font.setPointSize(10)
                self.label_12.setFont(font)
                self.label_12.setStyleSheet("color:white")
                self.label_12.setObjectName("label_12")
                self.label_13 = QtWidgets.QLabel(self.tab_2)
                self.label_13.setGeometry(QtCore.QRect(20, 300, 151, 16))
                font = QtGui.QFont()
                font.setFamily("Open Sans")
                font.setPointSize(12)
                self.label_13.setFont(font)
                self.label_13.setStyleSheet("color:white;")
                self.label_13.setObjectName("label_13")
                self.horizontalSlider_5 = QtWidgets.QSlider(self.tab_2)
                self.horizontalSlider_5.setGeometry(QtCore.QRect(80, 360, 160, 22))
                self.horizontalSlider_5.setMaximum(100)
                self.horizontalSlider_5.setProperty("value", 49)
                self.horizontalSlider_5.setOrientation(QtCore.Qt.Horizontal)
                self.horizontalSlider_5.setObjectName("horizontalSlider_5")
                self.label_14 = QtWidgets.QLabel(self.tab_2)
                self.label_14.setGeometry(QtCore.QRect(300, 360, 47, 13))
                font = QtGui.QFont()
                font.setFamily("Open Sans ExtraBold")
                font.setPointSize(10)
                self.label_14.setFont(font)
                self.label_14.setStyleSheet("color:white")
                self.label_14.setObjectName("label_14")
                self.label_15 = QtWidgets.QLabel(self.tab_2)
                self.label_15.setGeometry(QtCore.QRect(20, 160, 151, 16))
                font = QtGui.QFont()
                font.setFamily("Open Sans")
                font.setPointSize(12)
                self.label_15.setFont(font)
                self.label_15.setStyleSheet("color:white;")
                self.label_15.setObjectName("label_15")
                self.horizontalSlider_6 = QtWidgets.QSlider(self.tab_2)
                self.horizontalSlider_6.setGeometry(QtCore.QRect(70, 210, 160, 21))
                self.horizontalSlider_6.setStyleSheet("QSlider::groove:horizontal {\n"
        "    background-color: qlineargradient(x1: 0, y1: 0, x2: 1, y2: 0, stop: 0 #46992b, stop: 0.5 #0e566d, stop: 1 red);\n"
        "height:10px;\n"
        "  \n"
        "}\n"
        "QSlider::handle:horizontal {\n"
        "      width:5px;\n"
        "    height:50px;\n"
        "    background: white;\n"
        "border: 1px solid #46992b;\n"
        "    margin: -30px -10px;\n"
        "}\n"
        "")
                self.horizontalSlider_6.setMaximum(100)
                self.horizontalSlider_6.setProperty("value", 50)
                self.horizontalSlider_6.setOrientation(QtCore.Qt.Horizontal)
                self.horizontalSlider_6.setObjectName("horizontalSlider_6")
                self.tabWidget.addTab(self.tab_2, "")
                self.pushButton = QtWidgets.QPushButton(self.widget)
                self.pushButton.setGeometry(QtCore.QRect(140, 560, 80, 30))
                self.pushButton.setMaximumSize(QtCore.QSize(16777215, 40))
                self.pushButton.setStyleSheet("QPushButton{\n"
                "color:white;\n"
                "background-color:#00BFA5;\n"
                "}")
                font = QtGui.QFont()
                font.setFamily("Open Sans")
                font.setPointSize(10)
                self.pushButton.setFont(font)
                icon1 = QtGui.QIcon()
                icon1.addPixmap(QtGui.QPixmap("icons/20x20/1167975-20.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                self.pushButton.setIcon(icon1)
                self.pushButton.setObjectName("pushButton")
                self.pushButton_2 = QtWidgets.QPushButton(self.widget)
                self.pushButton_2.setGeometry(QtCore.QRect(100, 525, 171, 30))
                self.pushButton_2.setMinimumSize(QtCore.QSize(0, 30))
                self.pushButton_2.setMaximumSize(QtCore.QSize(16777215, 30))
                font = QtGui.QFont()
                font.setFamily("Open Sans")
                font.setPointSize(10)
                self.pushButton_2.setFont(font)
                self.pushButton_2.setStyleSheet("QPushButton{\n"
        "color:white;\n"
        "background-color:#15151B;\n"
        "}")
                icon2 = QtGui.QIcon()
                icon2.addPixmap(QtGui.QPixmap("icons/20x20/4092560-20.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                self.pushButton_2.setIcon(icon2)
                self.pushButton_2.setIconSize(QtCore.QSize(20, 20))
                self.pushButton_2.setObjectName("pushButton_2")
                self.verticalLayout_4.addWidget(self.widget)
                MainWindow.setCentralWidget(self.centralwidget)

                self.retranslateUi(MainWindow)
                self.tabWidget.setCurrentIndex(0)
                QtCore.QMetaObject.connectSlotsByName(MainWindow)

        def retranslateUi(self, MainWindow):
                _translate = QtCore.QCoreApplication.translate
                MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
                self.pushButton_3.setText(_translate("MainWindow", "Actualiser"))
                self.label.setText(_translate("MainWindow", "Résultats"))
                self.label_2.setText(_translate("MainWindow", "Algorithme génétique"))
                self.label_23.setText(_translate("MainWindow", "Fixer tous les parametres"))
                self.textEdit_32.setPlaceholderText(_translate("MainWindow", "taille de population"))
                self.plainTextEdit_9.setPlaceholderText(_translate("MainWindow", "Taille de population"))
                self.textEdit_33.setPlaceholderText(_translate("MainWindow", "taille de population"))
                self.plainTextEdit_10.setPlaceholderText(_translate("MainWindow", "Nombres des itérations"))
                self.label_4.setText(_translate("MainWindow", "50%"))
                self.label_5.setText(_translate("MainWindow", "Taux de croissment"))
                self.label_6.setText(_translate("MainWindow", "Taux de mutation"))
                self.label_7.setText(_translate("MainWindow", "50%"))
                self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "AG"))
                self.label_24.setText(_translate("MainWindow", "Fixer tous les parametres"))
                self.label_33.setText(_translate("MainWindow", " Recuit Simulé"))
                self.label_12.setText(_translate("MainWindow", "50%"))
                self.label_13.setText(_translate("MainWindow", "Seuil"))
                self.label_14.setText(_translate("MainWindow", "49%"))
                self.label_15.setText(_translate("MainWindow", "Température"))
                self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "RS"))
                self.pushButton.setText(_translate("MainWindow", "Exécuter"))
                self.pushButton_2.setText(_translate("MainWindow", "Choisir les séquences"))
                self.pushButton_3.clicked.connect(self.refr)
                self.graphWidget = pg.PlotWidget()
                sizePolicy = QSizePolicy(QSizePolicy.MinimumExpanding, QSizePolicy.MinimumExpanding)
                sizePolicy.setHorizontalStretch(2)
                sizePolicy.setVerticalStretch(2)
                sizePolicy.setHeightForWidth(self.graphWidget.sizePolicy().hasHeightForWidth())
                self.graphWidget.setSizePolicy(sizePolicy)
                self.graphWidget.setMinimumSize(QSize(0, 0))
                self.verticalLayout_2.addWidget(self.graphWidget)
                #self.ui.verticalLayout_2.setMargin(0)
                self.horizontalSlider_6.setValue(50)
                self.graphWidget.setBackground(( 31, 32, 41))
                #self.graphWidget.setTitle("Eye aspect ratio curve", color="#f12345", size="30pt")
                styles = {"color": "#F26A4E", "font-size": "12px"}
                self.graphWidget.setLabel("left", "Score", **styles)
                self.graphWidget.setLabel("bottom", "Itérations", **styles)
                styless = {"color": "#00BFA5", "font-size": "25px"}
                self.graphWidget.setTitle("<font face='Open Sans SemiBold'>Algorithme Génétique</font>",**styless)
                self.pen = pg.mkPen(color=(25, 255, 236))
                self.x = list(range(100))  # 100 time points
                self.y = [0]*100  # 100 data points
                self.lin=self.data_line =  self.graphWidget.plot(self.x, self.y, pen=self.pen)
                
                self.label_time1=QtWidgets.QLabel(self.layoutWidget)
                font = QtGui.QFont()
                font.setFamily("Open Sans")
                font.setPointSize(8)
                self.label_time1.setEnabled(False)
                self.label_time1.setFont(font)
                self.label_time1.setAlignment(QtCore.Qt.AlignRight)
                self.label_time1.setStyleSheet("color:white")
                self.label_time1.setObjectName("label_time_1")
                self.verticalLayout_2.addWidget(self.label_time1)

                self.graphWidget2 = pg.PlotWidget()
                sizePolicy = QSizePolicy(QSizePolicy.MinimumExpanding, QSizePolicy.MinimumExpanding)
                sizePolicy.setHorizontalStretch(2)
                sizePolicy.setVerticalStretch(2)
                sizePolicy.setHeightForWidth(self.graphWidget.sizePolicy().hasHeightForWidth())
                self.graphWidget2.setSizePolicy(sizePolicy)
                self.graphWidget2.setMinimumSize(QSize(0, 0))
                self.verticalLayout_2.addWidget(self.graphWidget2)
                self.graphWidget2.setBackground(( 31, 32, 41))
                #self.graphWidget.setTitle("Eye aspect ratio curve", color="#f12345", size="30pt")
                styles = {"color": "#F26A4E", "font-size": "12px"}
                self.graphWidget2.setLabel("left", "Score", **styles)
                self.graphWidget2.setLabel("bottom", "Itérations", **styles)
                styless = {"color": "#00BFA5", "font-size": "25px"}
                self.graphWidget2.setTitle("<font face='Open Sans SemiBold'>AG + RS</font>",**styless)
                self.pen2 = pg.mkPen(color=(25, 255, 236))
                self.x2 = list(range(100))  # 100 time points
                self.y2 = [0]*100  # 100 data points
                self.lin2=self.data_line2 =  self.graphWidget2.plot(self.x2, self.y2, pen=self.pen2)
        
                self.label_time2=QtWidgets.QLabel(self.layoutWidget)
                font = QtGui.QFont()
                font.setFamily("Open Sans")
                font.setPointSize(8)
                self.label_time2.setEnabled(False)
                self.label_time2.setFont(font)
                self.label_time2.setAlignment(QtCore.Qt.AlignRight)
                self.label_time2.setStyleSheet("color:white")
                self.label_time2.setObjectName("label_time_2")
                self.verticalLayout_2.addWidget(self.label_time2)
                self.pushButton_2.clicked.connect(self.browse_data1)
                self.pushButton.clicked.connect(self.runall)
                self.horizontalSlider.valueChanged.connect(self.Butt2)
                self.horizontalSlider_2.valueChanged.connect(self.Butt3)
                self.horizontalSlider_6.valueChanged.connect(self.Butt4)
                self.horizontalSlider_5.valueChanged.connect(self.changeseuil)
                self.horizontalSlider.setValue(70)
                self.horizontalSlider_2.setValue(5)
                self.horizontalSlider_6.setValue(50)
        
        
        def runall(self):

                po=self.plainTextEdit_9.toPlainText()
                pop=int(po)
                nbite=self.plainTextEdit_10.toPlainText()
                self.nbiter=int(nbite)                        
                self.sequences=self.getsequence(self.data_path)
                self.popul=self.initialisation(pop,self.sequences)
                self.RunAG()
                self.RunRC()


        def seqence_align(self,deb,sequence):
                #fin_gap=""
                deb_gap=""
                if deb!=0:
                        for i in range(deb):
                                deb_gap+="-"
                return (str(deb_gap)+str(sequence)) #+str(fin_gap))  
        
        def sequence_init(self,offset,index,original_sequences):
                sequence=original_sequences[index]
                while offset>0:
                        position=random.randint(0,len(sequence))
                        gap_nb=random.randint(0,offset)
                        sequence_part1=sequence[0:position]
                        sequence_part2=self.seqence_align(gap_nb,sequence[position:])
                        sequence=str(sequence_part1)+str(sequence_part2)
                        offset=offset-gap_nb
                #print(sequence)
                return sequence
                

        def initialisation(self,po_nb,original_sequences):
                max_seq=max(original_sequences,key=len)
                max_lent=len(max_seq)+2
                solutions=[]
                offset_Array=[]
                for i in range(0,len(original_sequences)):
                        offset_Array.append(max_lent-len(original_sequences[i]))
                for i in range(0,po_nb):
                        sequence=[]
                        for j in range(0,len(original_sequences)):
                                sequence.append(self.sequence_init(offset_Array[j],j,original_sequences))
                                #print("solution1"+str(sequence))
                        solutions.append(Solution(sequence))
                return solutions      
        def RunAG(self):            
                (self.y,self.x,self.timerr1,self.meuil)=(test.AG(self.nbiter,self.sequences,self.horizontalSlider.value(),self.horizontalSlider_2.value(),self.popul))
                self.lin.clear()
                self.timerr1=float("{0:.3f}".format(self.timerr1))
                self.label_time1.setText("Temps exec:"+str(self.timerr1)+" s\t Meuilleur score="+str(min(self.y)))
                self.lin=self.graphWidget.plot(self.x, self.y, pen=self.pen)
                #print("time="+str(timerr))
                
       
        def RunRC(self):                
                t=self.horizontalSlider_6.value()
                seuil=self.horizontalSlider_5.value()
                (self.y2,self.x3,self.timerr2)=(RC.AG(seuil,t,self.meuil))
                #self.x=(RC.AG(popp,sequences,seuil))[1]
                #degrees = [(m, (str(m)+"°"))           for m in self.x2                ]
                self.lin2.clear()
                self.x2.clear()
                for i in range(len(self.x3)):
                        self.x2.append(i+int(self.nbiter))
                self.lin2=self.graphWidget2.plot(self.x2, self.y2, pen=self.pen2, )
                self.timerr2=float("{0:.3f}".format(self.timerr2))+float("{0:.3f}".format(self.timerr1))
                self.label_time2.setText("Temps exec:"+str(self.timerr2)+" s\t Meuilleur score="+str(min(self.y2)))
                #ax=self.graphWidget2.getAxis('bottom')
                # Pass the list in, *in* a list.
                #ax.setTicks([degrees])
                
                # self.data_line.setData(self.x, self.y)
                #self.lin2.getViewBox().invertX(True)
                #self.lin2.getViewBox().
        def Butt2(self):
                taux=self.horizontalSlider.value()
                s=str(taux)+" %"
                self.label_4.setText(s)
        def Butt3(self):
                taux=self.horizontalSlider_2.value()
                s=str(taux)+" %"
                self.label_7.setText(s)
        def Butt4(self):
                taux=self.horizontalSlider_6.value()
                s=str(taux)+" °"
                self.label_12.setText(s)
                self.horizontalSlider_5.setMaximum(taux-1)
                self.horizontalSlider_5.setValue(taux-1)
                self.label_14.setText(""+str(taux-1)+"°")
        def getsequence(self,f):
                ff=f.split(sep="/")
                fs="Refernces/"+ff[-2]+"/"+ff[-1]
                file=open(fs,"r")
                list=[]
                line=file.readline()
                while line:
                        name=line
                        seq1=file.readline()
                        seq=seq1.replace("\n","")
                        list.append(seq)
                        line=file.readline()
                        
                return list
        def browse_data1(self):         
                self.data_path, _ =QtWidgets.QFileDialog.getOpenFileName(None,'Open File',"Refernces",'*.tfa',)
                print(self.data_path)
                #with open('data_path.pickle', 'wb') as handle:
                #        pickle.dump(data_path,handle,protocol=_pickle.HIGHEST_PROTOCOL)
                self.pushButton_2.setStyleSheet("QPushButton{\n"
                "border:1px solid green;"
                "background-color:#006600;\n"
                "color:white;"
                "}\n")
        def changeseuil(self):
                self.label_14.setText(""+str(self.horizontalSlider_5.value())+"°")   

        def refr(self):
                self.lin2.clear()
                self.lin.clear()
                self.plainTextEdit_10.setPlainText("")
                self.plainTextEdit_9.setPlainText("")
                self.x2 = list(range(100))  # 100 time points
                self.y2 = [0]*100  # 100 data points
                self.lin2=  self.graphWidget2.plot(self.x2, self.y2, pen=self.pen2)
                self.x = list(range(100))  # 100 time points
                self.y = [0]*100  # 100 data points
                self.lin=self.graphWidget.plot(self.x, self.y, pen=self.pen)
                self.label_time1.setText("")
                self.label_time2.setText("")
                self.pushButton_2.setStyleSheet("QPushButton{\n"
                "border:1px solid #15151B;"
                "background-color:#15151B;\n"
                "color:white;"
                "}\n")
                self.data_path=""
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
